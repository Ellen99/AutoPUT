/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package org.apache.commons.codec.language;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import org.apache.commons.codec.StringEncoderAbstractTest;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.junit.experimental.theories.Theories;
import org.junit.experimental.theories.Theory;
import org.junit.experimental.theories.DataPoints;

/**
 * Series of tests for the Match Rating Approach algorithm.
 *
 * General naming nomenclature for the test is of the form:
 * GeneralMetadataOnTheTestArea_ActualTestValues_ExpectedResult
 *
 * An unusual value is indicated by the term "corner case"
 */
public @RunWith(Theories.class) class AutoPutTest extends StringEncoderAbstractTest<MatchRatingApproachEncoder> {

    // ********** BEGIN REGION - TEST SUPPORT METHODS

    

    // ***** END REGION - TEST SUPPORT METHODS

    // ***** BEGIN REGION - TEST GET MRA ENCODING

    

    // ***** END REGION - TEST GET MRA ENCODING

    // ***** BEGIN REGION - TEST GET MRA COMPARISONS

    @Theory
	public final void autoPutTest(Fixture fixture) {
        assertTrue(this.getStringEncoder().isEncodeEquals(fixture._input[0], fixture._input[1]));
    }

    

    // ***** Begin Region - Test Get Encoding - Surnames

    

    // **** BEGIN YIDDISH/SLAVIC SECTION ****

    

    // **** END YIDDISH/SLAVIC SECTION ****

    @Override
    protected MatchRatingApproachEncoder createStringEncoder() {
        return new MatchRatingApproachEncoder();
    }

	private static String[] INPUT1 = { "smith", "smyth" };

	private static String[] EXPECTED1 = null;

	private static String[] INPUT2 = { "Burns", "Bourne" };

	private static String[] EXPECTED2 = null;

	private static String[] INPUT3 = { "Catherine", "Kathryn" };

	private static String[] EXPECTED3 = null;

	private static String[] INPUT4 = { "Brian", "Bryan" };

	private static String[] EXPECTED4 = null;

	private static String[] INPUT5 = { "Séan", "Shaun" };

	private static String[] EXPECTED5 = null;

	private static String[] INPUT6 = { "Cólm.   ", "C-olín" };

	private static String[] EXPECTED6 = null;

	private static String[] INPUT7 = { "Stephen", "Steven" };

	private static String[] EXPECTED7 = null;

	private static String[] INPUT8 = { "Steven", "Stefan" };

	private static String[] EXPECTED8 = null;

	private static String[] INPUT9 = { "Stephen", "Stefan" };

	private static String[] EXPECTED9 = null;

	private static String[] INPUT10 = { "Sam", "Samuel" };

	private static String[] EXPECTED10 = null;

	private static String[] INPUT11 = { "Micky", "Michael" };

	private static String[] EXPECTED11 = null;

	private static String[] INPUT12 = { "Oona", "Oonagh" };

	private static String[] EXPECTED12 = null;

	private static String[] INPUT13 = { "Sophie", "Sofia" };

	private static String[] EXPECTED13 = null;

	private static String[] INPUT14 = { "Franciszek", "Frances" };

	private static String[] EXPECTED14 = null;

	private static String[] INPUT15 = { "Tomasz", "tom" };

	private static String[] EXPECTED15 = null;

	private static String[] INPUT16 = { "Kl", "Karl" };

	private static String[] EXPECTED16 = null;

	private static String[] INPUT17 = { "Zach", "Zacharia" };

	private static String[] EXPECTED17 = null;

	private static String[] INPUT18 = { "O'Sullivan", "Ó ' Súilleabháin" };

	private static String[] EXPECTED18 = null;

	private static String[] INPUT19 = { "o'muireadhaigh", "Ó 'Muircheartaigh " };

	private static String[] EXPECTED19 = null;

	private static String[] INPUT20 = { "Cooper-Flynn", "Super-Lyn" };

	private static String[] EXPECTED20 = null;

	private static String[] INPUT21 = { "Hailey", "Halley" };

	private static String[] EXPECTED21 = null;

	private static String[] INPUT22 = { "Auerbach", "Uhrbach" };

	private static String[] EXPECTED22 = null;

	private static String[] INPUT23 = { "Moskowitz", "Moskovitz" };

	private static String[] EXPECTED23 = null;

	private static String[] INPUT24 = { "LIPSHITZ", "LIPPSZYC" };

	private static String[] EXPECTED24 = null;

	private static String[] INPUT25 = { "LEWINSKY", "LEVINSKI" };

	private static String[] EXPECTED25 = null;

	private static String[] INPUT26 = { "SZLAMAWICZ", "SHLAMOVITZ" };

	private static String[] EXPECTED26 = null;

	private static String[] INPUT27 = { "R o s o ch o w a c ie c", " R o s o k ho v a ts e ts" };

	private static String[] EXPECTED27 = null;

	private static String[] INPUT28 = { " P rz e m y s l", " P sh e m e sh i l" };

	private static String[] EXPECTED28 = null;

	private static String[] INPUT29 = { "Peterson", "Peters" };

	private static String[] EXPECTED29 = null;

	private static String[] INPUT30 = { "McGowan", "Mc Geoghegan" };

	private static String[] EXPECTED30 = null;

	private static String[] INPUT31 = { "Sean", "John" };

	private static String[] EXPECTED31 = null;

	@DataPoints public static Fixture[] DATA={new Fixture(INPUT1,EXPECTED1),new Fixture(INPUT2,EXPECTED2),new Fixture(INPUT3,EXPECTED3),new Fixture(INPUT4,EXPECTED4),new Fixture(INPUT5,EXPECTED5),new Fixture(INPUT6,EXPECTED6),new Fixture(INPUT7,EXPECTED7),new Fixture(INPUT8,EXPECTED8),new Fixture(INPUT9,EXPECTED9),new Fixture(INPUT10,EXPECTED10),new Fixture(INPUT11,EXPECTED11),new Fixture(INPUT12,EXPECTED12),new Fixture(INPUT13,EXPECTED13),new Fixture(INPUT14,EXPECTED14),new Fixture(INPUT15,EXPECTED15),new Fixture(INPUT16,EXPECTED16),new Fixture(INPUT17,EXPECTED17),new Fixture(INPUT18,EXPECTED18),new Fixture(INPUT19,EXPECTED19),new Fixture(INPUT20,EXPECTED20),new Fixture(INPUT21,EXPECTED21),new Fixture(INPUT22,EXPECTED22),new Fixture(INPUT23,EXPECTED23),new Fixture(INPUT24,EXPECTED24),new Fixture(INPUT25,EXPECTED25),new Fixture(INPUT26,EXPECTED26),new Fixture(INPUT27,EXPECTED27),new Fixture(INPUT28,EXPECTED28),new Fixture(INPUT29,EXPECTED29),new Fixture(INPUT30,EXPECTED30),new Fixture(INPUT31,EXPECTED31)};

	public static class Fixture {
		private String[] _input;
		private Object _expected;

		public Fixture(String[] _input, Object _expected) {
			this._input = _input;
			this._expected = _expected;
		}
	}

    // ***** END REGION - TEST GET MRA COMPARISONS

}