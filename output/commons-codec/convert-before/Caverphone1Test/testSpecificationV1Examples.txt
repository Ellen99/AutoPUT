/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package org.apache.commons.codec.language;

import org.apache.commons.codec.EncoderException;
import org.apache.commons.codec.StringEncoderAbstractTest;
import org.junit.Assert;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.junit.runners.Parameterized;
import org.junit.runners.Parameters;

/**
 * Tests Caverphone1.
 *
 * @version $Id: CaverphoneTest.java 1075947 2011-03-01 17:56:14Z ggregory $
 * @since 1.5
 */
public @RunWith(Parameterized.class) class Caverphone1Test extends StringEncoderAbstractTest<Caverphone1> {

    @Override
    protected Caverphone1 createStringEncoder() {
        return new Caverphone1();
    }

    /**
     * Tests example from http://caversham.otago.ac.nz/files/working/ctp060902.pdf
     *
     * @throws EncoderException
     */
    @Test
    public void testSpecificationV1Examples() throws EncoderException {
        final String[][] data = {{_input[0], _input[1]}, {_input[2], _input[3]}};
        this.checkEncodings(data);
    }

    @Parameters public static Collection<Object[]> data(){return Arrays.asList(new Object[][]{{{"David","TFT111","Whittle","WTL111"},{}},{{"Lee","L11111","Thompson","TMPSN1"},{}}});}

	private String[] _input;
	private Object _expected;

	public AutoPUT(String[] _input, Object _expected) {
		this._input = _input;
		this._expected = _expected;
	}

}