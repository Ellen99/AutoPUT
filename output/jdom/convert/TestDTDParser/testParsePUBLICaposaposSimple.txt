package org.jdom2.test.cases.input;

import static org.junit.Assert.*;

import org.jdom2.DocType;
import org.jdom2.JDOMException;
import org.jdom2.JDOMFactory;
import org.jdom2.DefaultJDOMFactory;
import org.jdom2.input.stax.DTDParser;
import org.jdom2.test.util.UnitTestUtil;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.junit.experimental.theories.Theories;
import org.junit.experimental.theories.Theory;
import org.junit.experimental.theories.DataPoints;

@SuppressWarnings("javadoc")
public @RunWith(Theories.class) class AutoPutTest {

	@Theory
	public void autoPutTest(Fixture fixture) throws JDOMException {
		DocType dt = DTDParser.parse(
				_input.fixture, 
				factory);
		
		assertEquals("root", dt.getElementName());
		assertEquals("public", dt.getPublicID());
		assertEquals("system", dt.getSystemID());
		assertEquals("internal", dt.getInternalSubset());
	}

	private static String INPUT1 = "<!DOCTYPE root PUBLIC 'public'  'system'  [internal] >";

	private static String EXPECTED1 = null;

	private static String INPUT2 = "<!DOCTYPE root PUBLIC 'public' 'system'[internal]>";

	private static String EXPECTED2 = null;

	@DataPoints public static Fixture[] DATA={new Fixture(INPUT1,EXPECTED1),new Fixture(INPUT2,EXPECTED2)};

	public static class Fixture {
		private String _input;
		private Object _expected;

		public Fixture(String _input, Object _expected) {
			this._input = _input;
			this._expected = _expected;
		}
	}

}