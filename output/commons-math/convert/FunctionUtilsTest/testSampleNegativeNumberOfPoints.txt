/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package org.apache.commons.math4.analysis;

import org.apache.commons.math4.analysis.differentiation.DerivativeStructure;
import org.apache.commons.math4.analysis.differentiation.MultivariateDifferentiableFunction;
import org.apache.commons.math4.analysis.differentiation.UnivariateDifferentiableFunction;
import org.apache.commons.math4.analysis.function.Add;
import org.apache.commons.math4.analysis.function.Constant;
import org.apache.commons.math4.analysis.function.Cos;
import org.apache.commons.math4.analysis.function.Cosh;
import org.apache.commons.math4.analysis.function.Divide;
import org.apache.commons.math4.analysis.function.Identity;
import org.apache.commons.math4.analysis.function.Inverse;
import org.apache.commons.math4.analysis.function.Log;
import org.apache.commons.math4.analysis.function.Max;
import org.apache.commons.math4.analysis.function.Min;
import org.apache.commons.math4.analysis.function.Minus;
import org.apache.commons.math4.analysis.function.Multiply;
import org.apache.commons.math4.analysis.function.Pow;
import org.apache.commons.math4.analysis.function.Power;
import org.apache.commons.math4.analysis.function.Sin;
import org.apache.commons.math4.analysis.function.Sinc;
import org.apache.commons.math4.exception.DimensionMismatchException;
import org.apache.commons.math4.exception.NotStrictlyPositiveException;
import org.apache.commons.math4.exception.NumberIsTooLargeException;
import org.apache.commons.math4.util.FastMath;
import org.junit.Assert;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.junit.experimental.theories.Theories;
import org.junit.experimental.theories.Theory;
import org.junit.experimental.theories.DataPoints;

/**
 * Test for {@link FunctionUtils}.
 */
public @RunWith(Theories.class) class AutoPutTest {
    private final double EPS = FastMath.ulp(1d);

    @Theory
	public void autoPutTest(Fixture fixture){
        FunctionUtils.sample(new Sin(), 0.0, FastMath.PI, fixture._input);
    }

    private static int INPUT1 = -1;

	private static Object EXPECTED1 = null;

	private static int INPUT2 = 0;

	private static Object EXPECTED2 = null;

	@DataPoints public static Fixture[] DATA={new Fixture(INPUT1,EXPECTED1),new Fixture(INPUT2,EXPECTED2)};

	public static class Fixture {
		private int _input;
		private Object _expected;

		public Fixture(int _input, Object _expected) {
			this._input = _input;
			this._expected = _expected;
		}
	}

}